{"version":3,"file":"static_styles_portico_landing_page_css-static_js_bundles_portico_js-static_js_portico_landing-4f936e.js","mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChhsources":["webpack://zulip/./node_modules/ga-gtag/lib/index.js","webpack://zulip/./node_modules/tippy.js/dist/tippy.css?2e12","webpack://zulip/./static/styles/portico/landing_page.css?0362","webpack://zulip/./static/styles/portico/portico_styles.css","webpack://zulip/./static/js/bundles/portico.js","webpack://zulip/./static/js/portico/google-analytics.js","webpack://zulip/./static/js/portico/header.js","webpack://zulip/./static/js/portico/landing-page.js","webpack://zulip/./static/js/portico/tabbed-instructions.js","webpack://zulip/./static/js/portico/team.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.install=exports.gtag=exports[\"default\"]=void 0;var install=function install(trackingId){var additionalConfigInfo=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var scriptId=\"ga-gtag\";if(document.getElementById(scriptId))return;var _document=document,head=_document.head;var script=document.createElement(\"script\");script.id=scriptId;script.type=\"text/javascript\";script.async=true;script.src=\"https://www.googletagmanager.com/gtag/js?id=\".concat(trackingId);head.insertBefore(script,head.firstChild);window.dataLayer=window.dataLayer||[];gtag(\"js\",new Date);gtag(\"config\",trackingId,additionalConfigInfo)};exports.install=install;var gtag=function gtag(){window.dataLayer.push(arguments)};exports.gtag=gtag;var _default=gtag;exports[\"default\"]=_default;","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import \"./common\";\nimport \"../portico/header\";\nimport \"../portico/google-analytics\";\nimport \"../../styles/portico/portico_styles.css\";\nimport \"tippy.js/dist/tippy.css\";\n","import {gtag, install} from \"ga-gtag\";\n\nimport {page_params} from \"../page_params\";\n\nexport let config;\n\nif (page_params.google_analytics_id !== undefined) {\n    install(page_params.google_analytics_id);\n    config = (info) => gtag(\"config\", page_params.google_analytics_id, info);\n} else {\n    config = () => {};\n}\n","import $ from \"jquery\";\n\n$(() => {\n    $(\".portico-header li.logout\").on(\"click\", () => {\n        $(\"#logout_form\").trigger(\"submit\");\n        return false;\n    });\n\n    $(\".dropdown\").on(\"click\", (e) => {\n        const $this = $(e.target);\n        const dropdown_is_shown = $this.closest(\".dropdown\").hasClass(\"show\");\n\n        if (!dropdown_is_shown) {\n            $this.closest(\".dropdown\").addClass(\"show\");\n        } else if (dropdown_is_shown) {\n            $this.closest(\".dropdown\").removeClass(\"show\");\n        }\n    });\n\n    $(\".nav-dropdown\").on(\"mouseover\", (e) => {\n        const $this = $(e.target);\n        // We switch to a vertical sidebar menu at width <= 1024px\n        const in_vertical_orientation = window.matchMedia(\"(max-width: 1024px)\").matches;\n        // We only support mouseover events if we are in a horizontal\n        // orientation (width > 1024px) and if the primary input mechanism\n        // can hover over elements.\n        const hover_supported = window.matchMedia(\"(hover: hover)\").matches;\n        const dropdown_is_shown = $this.closest(\"ul .dropdown\").hasClass(\"show\");\n\n        if (!dropdown_is_shown && !in_vertical_orientation && hover_supported) {\n            $this.closest(\"ul .dropdown\").addClass(\"show\");\n        }\n    });\n\n    $(\".nav-dropdown\").on(\"mouseout\", (e) => {\n        const $this = $(e.target);\n        // We switch to a vertical sidebar menu at width <= 1024px\n        const in_vertical_orientation = window.matchMedia(\"(max-width: 1024px)\").matches;\n        // We only support mouseout events if we are in a horizontal\n        // orientation (width > 1024px) and if the primary input mechanism\n        // can hover over elements.\n        const hover_supported = window.matchMedia(\"(hover: hover)\").matches;\n        const dropdown_is_shown = $this.closest(\"ul .dropdown\").hasClass(\"show\");\n\n        if (dropdown_is_shown && !in_vertical_orientation && hover_supported) {\n            $this.closest(\"ul .dropdown\").removeClass(\"show\");\n        }\n    });\n});\n","import $ from \"jquery\";\n\nimport {detect_user_os} from \"./tabbed-instructions\";\nimport render_tabs from \"./team\";\n\nexport function path_parts() {\n    return window.location.pathname.split(\"/\").filter((chunk) => chunk !== \"\");\n}\n\nconst hello_events = function () {\n    $(\".footer\").addClass(\"hello\");\n};\n\nconst apps_events = function () {\n    const info = {\n        windows: {\n            image: \"/static/images/app-screenshots/microsoft.png\",\n            alt: \"Windows\",\n            description:\n                \"Zulip for Windows is even better than Zulip on the web, with a cleaner look, tray integration, native notifications, and support for multiple Zulip accounts.\",\n            download_link: \"/apps/download/windows\",\n            show_instructions: true,\n            install_guide: \"/help/desktop-app-install-guide\",\n            app_type: \"desktop\",\n        },\n        mac: {\n            image: \"/static/images/app-screenshots/macbook.png\",\n            alt: \"macOS\",\n            description:\n                \"Zulip on macOS is even better than Zulip on the web, with a cleaner look, tray integration, native notifications, and support for multiple Zulip accounts.\",\n            download_link: \"/apps/download/mac\",\n            mac_arm64_link: \"/apps/download/mac-arm64\",\n            show_instructions: true,\n            install_guide: \"/help/desktop-app-install-guide\",\n            app_type: \"desktop\",\n        },\n        android: {\n            image: \"/static/images/app-screenshots/zulip-android.png\",\n            alt: \"Android\",\n            description: \"Zulip's native Android app makes it easy to keep up while on the go.\",\n            show_instructions: false,\n            play_store_link: \"https://play.google.com/store/apps/details?id=com.zulipmobile\",\n            download_link: \"https://github.com/zulip/zulip-mobile/releases/latest\",\n            app_type: \"mobile\",\n        },\n        ios: {\n            image: \"/static/images/app-screenshots/zulip-iphone-rough.png\",\n            alt: \"iOS\",\n            description: \"Zulip's native iOS app makes it easy to keep up while on the go.\",\n            show_instructions: false,\n            app_store_link: \"https://itunes.apple.com/us/app/zulip/id1203036395\",\n            app_type: \"mobile\",\n        },\n        linux: {\n            image: \"/static/images/app-screenshots/ubuntu.png\",\n            alt: \"Linux\",\n            description:\n                \"Zulip on the Linux desktop is even better than Zulip on the web, with a cleaner look, tray integration, native notifications, and support for multiple Zulip accounts.\",\n            download_link: \"/apps/download/linux\",\n            show_instructions: true,\n            install_guide: \"/help/desktop-app-install-guide\",\n            app_type: \"desktop\",\n        },\n    };\n\n    let version;\n\n    function get_version_from_path() {\n        let result;\n        const parts = path_parts();\n\n        for (const version of Object.keys(info)) {\n            if (parts.includes(version)) {\n                result = version;\n            }\n        }\n\n        result = result || detect_user_os();\n        return result;\n    }\n\n    const update_page = function () {\n        const $download_instructions = $(\".download-instructions\");\n        const $third_party_apps = $(\"#third-party-apps\");\n        const $download_android_apk = $(\"#download-android-apk\");\n        const $download_from_google_play_store = $(\".download-from-google-play-store\");\n        const $download_from_apple_app_store = $(\".download-from-apple-app-store\");\n        const $download_mac_arm64 = $(\"#download-mac-arm64\");\n        const $desktop_download_link = $(\".desktop-download-link\");\n        const version_info = info[version];\n\n        $(\".info .platform\").text(version_info.alt);\n        $(\".info .description\").text(version_info.description);\n        $desktop_download_link.attr(\"href\", version_info.download_link);\n        $download_from_google_play_store.attr(\"href\", version_info.play_store_link);\n        $download_from_apple_app_store.attr(\"href\", version_info.app_store_link);\n        $download_android_apk.attr(\"href\", version_info.download_link);\n        $download_mac_arm64.attr(\"href\", version_info.mac_arm64_link);\n        $(\".image img\").attr(\"src\", version_info.image);\n        $download_instructions.find(\"a\").attr(\"href\", version_info.install_guide);\n\n        $download_instructions.toggle(version_info.show_instructions);\n\n        $third_party_apps.toggle(version_info.app_type === \"desktop\");\n        $desktop_download_link.toggle(version_info.app_type === \"desktop\");\n        $download_android_apk.toggle(version === \"android\");\n        $download_from_google_play_store.toggle(version === \"android\");\n        $download_from_apple_app_store.toggle(version === \"ios\");\n        $download_mac_arm64.toggle(version === \"mac\");\n    };\n\n    // init\n    version = get_version_from_path();\n    update_page();\n};\n\nconst events = function () {\n    // get the location url like `zulip.com/features/`, cut off the trailing\n    // `/` and then split by `/` to get [\"zulip.com\", \"features\"], then\n    // pop the last element to get the current section (eg. `features`).\n    const location = window.location.pathname.replace(/\\/$/, \"\").split(/\\//).pop();\n\n    $(`[data-on-page='${CSS.escape(location)}']`).addClass(\"active\");\n\n    $(\"body\").on(\"click\", (e) => {\n        const $e = $(e.target);\n\n        if ($e.is(\"nav ul .exit\")) {\n            $(\"nav ul\").css(\"transform\", \"translate(-350px, 0)\");\n            // See https://ishadeed.com/article/layout-flickering/ for\n            // more context as to why the following timeout is important.\n            setTimeout(() => {\n                $(\"nav ul\").removeClass(\"show\");\n                $(\"nav ul\").css(\"transform\", \"\");\n                $(\"body\").removeClass(\"noscroll\");\n            }, 500);\n        }\n\n        if ($(\"nav ul.show\") && !$e.closest(\"nav ul.show\").length && !$e.is(\"nav ul.show\")) {\n            $(\"nav ul\").removeClass(\"show\");\n            $(\"body\").removeClass(\"noscroll\");\n        }\n    });\n\n    $(\".hamburger\").on(\"click\", (e) => {\n        $(\"nav ul\").addClass(\"show\");\n        $(\"body\").addClass(\"noscroll\");\n        e.stopPropagation();\n    });\n\n    if (path_parts().includes(\"apps\")) {\n        apps_events();\n    }\n\n    if (path_parts().includes(\"hello\")) {\n        hello_events();\n    }\n};\n\n$(() => {\n    // Initiate the bootstrap carousel logic\n    $(\".carousel\").carousel({\n        interval: false,\n    });\n\n    // Move to the next slide on clicking inside the carousel container\n    $(\".carousel-inner .item-container\").on(\"click\", function (e) {\n        const get_tag_name = e.target.tagName.toLowerCase();\n        const is_button = get_tag_name === \"button\";\n        const is_link = get_tag_name === \"a\";\n        const is_last_slide = $(\"#tour-carousel .carousel-inner .item:last-child\").hasClass(\n            \"active\",\n        );\n\n        // Do not trigger this event if user clicks on a button, link\n        // or if it's the last slide\n        const move_slide_forward = !is_button && !is_link && !is_last_slide;\n\n        if (move_slide_forward) {\n            $(this).closest(\".carousel\").carousel(\"next\");\n        }\n    });\n\n    $(\".carousel\").on(\"slid\", function () {\n        const $this = $(this);\n        $this.find(\".visibility-control\").show();\n        if ($this.find(\".carousel-inner .item\").first().hasClass(\"active\")) {\n            $this.find(\".left.visibility-control\").hide();\n        } else if ($this.find(\".carousel-inner .item\").last().hasClass(\"active\")) {\n            $this.find(\".right.visibility-control\").hide();\n        }\n    });\n\n    // Set up events / categories / search\n    events();\n\n    if (window.location.pathname === \"/team/\") {\n        render_tabs();\n    }\n\n    // Source: https://stackoverflow.com/questions/819416/adjust-width-and-height-of-iframe-to-fit-with-content-in-it\n    // Resize tweet to avoid overlapping with image. Since tweet uses an iframe which doesn't adjust with\n    // screen resize, we need to manually adjust its width.\n\n    function resizeIFrameToFitContent(iFrame) {\n        $(iFrame).width(\"38vw\");\n    }\n\n    window.addEventListener(\"resize\", () => {\n        const iframes = document.querySelectorAll(\".twitter-tweet iframe\");\n        for (const iframe of iframes) {\n            resizeIFrameToFitContent(iframe);\n        }\n    });\n});\n\n// Scroll to anchor link when clicked. Note that help.js has a similar\n// function; this file and help.js are never included on the same\n// page.\n$(document).on(\"click\", \".markdown h1, .markdown h2, .markdown h3\", function () {\n    window.location.hash = $(this).attr(\"id\");\n});\n","import $ from \"jquery\";\n\nimport * as common from \"../common\";\n\nexport function detect_user_os() {\n    if (/android/i.test(navigator.userAgent)) {\n        return \"android\";\n    }\n    if (/iphone|ipad|ipod/i.test(navigator.userAgent)) {\n        return \"ios\";\n    }\n    if (common.has_mac_keyboard()) {\n        return \"mac\";\n    }\n    if (/win/i.test(navigator.userAgent)) {\n        return \"windows\";\n    }\n    if (/linux/i.test(navigator.userAgent)) {\n        return \"linux\";\n    }\n    return \"mac\"; // if unable to determine OS return Mac by default\n}\n\nexport function activate_correct_tab($codeSection) {\n    const user_os = detect_user_os();\n    const desktop_os = new Set([\"mac\", \"linux\", \"windows\"]);\n    const $li = $codeSection.find(\"ul.nav li\");\n    const $blocks = $codeSection.find(\".blocks div\");\n\n    $li.each(function () {\n        const language = this.dataset.language;\n        $(this).removeClass(\"active\");\n        if (language === user_os) {\n            $(this).addClass(\"active\");\n        }\n\n        if (desktop_os.has(user_os) && language === \"desktop-web\") {\n            $(this).addClass(\"active\");\n        }\n    });\n\n    $blocks.each(function () {\n        const language = this.dataset.language;\n        $(this).removeClass(\"active\");\n        if (language === user_os) {\n            $(this).addClass(\"active\");\n        }\n\n        if (desktop_os.has(user_os) && language === \"desktop-web\") {\n            $(this).addClass(\"active\");\n        }\n    });\n\n    // if no tab was activated, just activate the first one\n    const $active_list_items = $li.filter(\".active\");\n    if (!$active_list_items.length) {\n        $li.first().addClass(\"active\");\n        const language = $li.first()[0].dataset.language;\n        $blocks.filter(\"[data-language=\" + language + \"]\").addClass(\"active\");\n    }\n}\n\n$(\".code-section\").each(function () {\n    activate_correct_tab($(this));\n});\n","import $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport {page_params} from \"../page_params\";\n\nconst repo_name_to_tab_name = {\n    zulip: \"server\",\n    \"zulip-desktop\": \"desktop\",\n    \"zulip-mobile\": \"mobile\",\n    \"python-zulip-api\": \"python-zulip-api\",\n    \"zulip-js\": \"zulip-js\",\n    zulipbot: \"zulipbot\",\n    \"zulip-terminal\": \"terminal\",\n    \"zulip-ios-legacy\": \"\",\n    \"zulip-android\": \"\",\n};\n\n// Remember the loaded repositories so that HTML is not redundantly edited\n// if a user leaves and then revisits the same tab.\nconst loaded_repos = [];\n\nfunction calculate_total_commits(contributor) {\n    let commits = 0;\n    for (const repo_name of Object.keys(repo_name_to_tab_name)) {\n        commits += contributor[repo_name] || 0;\n    }\n    return commits;\n}\n\nfunction get_profile_url(contributor, tab_name) {\n    const commit_email_linked_to_github = \"github_username\" in contributor;\n\n    if (commit_email_linked_to_github) {\n        return \"https://github.com/\" + contributor.github_username;\n    }\n\n    const email = contributor.email;\n\n    if (tab_name) {\n        return `https://github.com/zulip/${tab_name}/commits?author=${email}`;\n    }\n\n    for (const repo_name in repo_name_to_tab_name) {\n        if (repo_name in contributor) {\n            return `https://github.com/zulip/${repo_name}/commits?author=${email}`;\n        }\n    }\n\n    return undefined;\n}\n\nfunction get_display_name(contributor) {\n    if (contributor.github_username) {\n        return \"@\" + contributor.github_username;\n    }\n    return contributor.name;\n}\n\nfunction exclude_bot_contributors(contributor) {\n    return contributor.github_username !== \"dependabot[bot]\";\n}\n\n// TODO (for v2 of /team contributors):\n//   - Make tab header responsive.\n//   - Display full name instead of GitHub username.\nexport default function render_tabs() {\n    const template = _.template($(\"#contributors-template\").html());\n    const count_template = _.template($(\"#count-template\").html());\n    const total_count_template = _.template($(\"#total-count-template\").html());\n    const contributors_list = page_params.contributors.filter((c) => exclude_bot_contributors(c));\n    const mapped_contributors_list = contributors_list.map((c) => ({\n        name: get_display_name(c),\n        github_username: c.github_username,\n        avatar: c.avatar,\n        profile_url: get_profile_url(c),\n        commits: calculate_total_commits(c),\n    }));\n    const total_tab_html = mapped_contributors_list\n        .sort((a, b) => (a.commits < b.commits ? 1 : a.commits > b.commits ? -1 : 0))\n        .map((c) => template(c))\n        .join(\"\");\n\n    const hundred_plus_total_contributors = mapped_contributors_list.filter(\n        (c) => c.commits >= 100,\n    );\n\n    $(\"#tab-total .contributors-grid\").html(total_tab_html);\n    $(\"#tab-total\").prepend(\n        total_count_template({\n            contributor_count: contributors_list.length,\n            tab_name: \"total\",\n            hundred_plus_contributor_count: hundred_plus_total_contributors.length,\n        }),\n    );\n\n    for (const repo_name of Object.keys(repo_name_to_tab_name)) {\n        const tab_name = repo_name_to_tab_name[repo_name];\n        if (!tab_name) {\n            continue;\n        }\n        // Set as the loading template for now, and load when clicked.\n        $(`#tab-${CSS.escape(tab_name)} .contributors-grid`).html($(\"#loading-template\").html());\n\n        $(`#${CSS.escape(tab_name)}`).on(\"click\", () => {\n            if (!loaded_repos.includes(repo_name)) {\n                const filtered_by_repo = contributors_list.filter((c) => c[repo_name]);\n                const html = filtered_by_repo\n                    .sort((a, b) =>\n                        a[repo_name] < b[repo_name] ? 1 : a[repo_name] > b[repo_name] ? -1 : 0,\n                    )\n                    .map((c) =>\n                        template({\n                            name: get_display_name(c),\n                            github_username: c.github_username,\n                            avatar: c.avatar,\n                            profile_url: get_profile_url(c),\n                            commits: c[repo_name],\n                        }),\n                    )\n                    .join(\"\");\n\n                $(`#tab-${CSS.escape(tab_name)} .contributors-grid`).html(html);\n                const contributor_count = filtered_by_repo.length;\n                const hundred_plus_contributor_count = filtered_by_repo.filter(\n                    (c) => c[repo_name] >= 100,\n                ).length;\n                const repo_url = `https://github.com/zulip/${repo_name}`;\n                $(`#tab-${CSS.escape(tab_name)}`).prepend(\n                    count_template({\n                        contributor_count,\n                        repo_name,\n                        repo_url,\n                        hundred_plus_contributor_count,\n                    }),\n                );\n\n                loaded_repos.push(repo_name);\n            }\n        });\n    }\n}\n"],"names":[],"sourceRoot":""}